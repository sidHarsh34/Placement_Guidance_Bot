{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mital\\\\Documents\\\\PlacementGuidanceBot\\\\frontend\\\\src\\\\Mycomponents\\\\Home.js\";\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './Home.css';\n// export const Home = () => {\n//     const [userInput, setUserInput] = useState('');\n//     const [chatLog, setChatLog] = useState([]);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (userInput.trim() === '') return;\n\n//         // Add user question to chat log\n//         const updatedChatLog = [\n//             ...chatLog,\n//             { sender: 'You', message: userInput }\n//         ];\n//         setChatLog(updatedChatLog);\n//         // Clear input field after submitting the question\n//         setUserInput('');\n\n//         try {\n//             // Send user question to server using Axios\n//             const response = await axios.post('http://localhost:5000/chat', { prompt: userInput });\n//             const data = response.data;\n\n//             // Add bot response to chat log\n//             const updatedChatLogWithResponse = [\n//                 ...updatedChatLog,\n//                 { sender: 'Chatbot', message: data.response }\n//             ];\n//             setChatLog(updatedChatLogWithResponse);\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"container main-content\">\n//             <div className=\"row\">\n//                 <div className=\"col-8\">\n//                     <h3>Ask anything related to Placement</h3>\n//                     <div className=\"chat-log\">\n//                         {chatLog.map((entry, index) => (\n//                             <div key={index} className={`message ${entry.sender.toLowerCase()}`}>\n//                                 <strong>{entry.sender}:</strong> {entry.message}\n//                             </div>\n//                         ))}\n//                     </div>\n//                     <form onSubmit={handleSubmit}>\n//                         <input\n//                             type=\"text\"\n//                             value={userInput}\n//                             onChange={(e) => setUserInput(e.target.value)}\n//                             placeholder=\"Type your question here...\"\n//                         />\n//                         <button type=\"submit\">Submit</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// Home.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport NewChatPage from './NewChatPage';\nimport './Home.css';\n\n// export const Home = () => {\n//     const [userInput, setUserInput] = useState('');\n//     const [chatLog, setChatLog] = useState([]);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (userInput.trim() === '') return;\n\n//         // Add user question to chat log\n//         const updatedChatLog = [\n//             ...chatLog,\n//             { sender: 'You', message: userInput }\n//         ];\n//         setChatLog(updatedChatLog);\n//         // Clear input field after submitting the question\n//         setUserInput('');\n\n//         try {\n//             // Send user question to server using Axios\n//             const response = await axios.post('http://localhost:5000/chat', { prompt: userInput });\n//             const data = response.data;\n\n//             // Add bot response to chat log\n//             const updatedChatLogWithResponse = [\n//                 ...updatedChatLog,\n//                 { sender: 'Chatbot', message: data.response }\n//             ];\n//             setChatLog(updatedChatLogWithResponse);\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = ({\n  chatLog,\n  setChatLog\n}) => {\n  var _s = $RefreshSig$();\n  const handleSubmit = e => {\n    _s();\n    const [userInput, setUserInput] = useState('');\n    const [chatLog, setChatLog] = useState([]);\n    const handleSubmit = async e => {\n      e.preventDefault();\n      if (userInput.trim() === '') return;\n\n      // Add user question to chat log\n      const updatedChatLog = [...chatLog, {\n        sender: 'You',\n        message: userInput\n      }];\n      setChatLog(updatedChatLog);\n      // Clear input field after submitting the question\n      setUserInput('');\n      try {\n        // Send user question to server using Axios\n        const response = await axios.post('http://localhost:5000/chat', {\n          prompt: userInput\n        });\n        const data = response.data;\n\n        // Add bot response to chat log\n        const updatedChatLogWithResponse = [...updatedChatLog, {\n          sender: 'Chatbot',\n          message: data.response\n        }];\n        setChatLog(updatedChatLogWithResponse);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n  };\n  _s(handleSubmit, \"QxTOZ9NXReh9HAvez9XVQCPvcDE=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ask anything related to Placement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-log\",\n          children: chatLog.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${entry.sender.toLowerCase()}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [entry.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), \" \", entry.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            placeholder: \"Type your question here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/new-chat\",\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","Link","Route","Switch","NewChatPage","jsxDEV","_jsxDEV","Home","chatLog","setChatLog","_s","$RefreshSig$","handleSubmit","e","userInput","setUserInput","preventDefault","trim","updatedChatLog","sender","message","response","post","prompt","data","updatedChatLogWithResponse","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","index","toLowerCase","onSubmit","type","value","onChange","target","placeholder","to","_c","$RefreshReg$"],"sources":["C:/Users/mital/Documents/PlacementGuidanceBot/frontend/src/Mycomponents/Home.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './Home.css';\r\n// export const Home = () => {\r\n//     const [userInput, setUserInput] = useState('');\r\n//     const [chatLog, setChatLog] = useState([]);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (userInput.trim() === '') return;\r\n\r\n//         // Add user question to chat log\r\n//         const updatedChatLog = [\r\n//             ...chatLog,\r\n//             { sender: 'You', message: userInput }\r\n//         ];\r\n//         setChatLog(updatedChatLog);\r\n//         // Clear input field after submitting the question\r\n//         setUserInput('');\r\n\r\n//         try {\r\n//             // Send user question to server using Axios\r\n//             const response = await axios.post('http://localhost:5000/chat', { prompt: userInput });\r\n//             const data = response.data;\r\n\r\n//             // Add bot response to chat log\r\n//             const updatedChatLogWithResponse = [\r\n//                 ...updatedChatLog,\r\n//                 { sender: 'Chatbot', message: data.response }\r\n//             ];\r\n//             setChatLog(updatedChatLogWithResponse);\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container main-content\">\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-8\">\r\n//                     <h3>Ask anything related to Placement</h3>\r\n//                     <div className=\"chat-log\">\r\n//                         {chatLog.map((entry, index) => (\r\n//                             <div key={index} className={`message ${entry.sender.toLowerCase()}`}>\r\n//                                 <strong>{entry.sender}:</strong> {entry.message}\r\n//                             </div>\r\n//                         ))}\r\n//                     </div>\r\n//                     <form onSubmit={handleSubmit}>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={userInput}\r\n//                             onChange={(e) => setUserInput(e.target.value)}\r\n//                             placeholder=\"Type your question here...\"\r\n//                         />\r\n//                         <button type=\"submit\">Submit</button>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n// Home.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport NewChatPage from './NewChatPage';\r\nimport './Home.css';\r\n\r\n// export const Home = () => {\r\n//     const [userInput, setUserInput] = useState('');\r\n//     const [chatLog, setChatLog] = useState([]);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (userInput.trim() === '') return;\r\n\r\n//         // Add user question to chat log\r\n//         const updatedChatLog = [\r\n//             ...chatLog,\r\n//             { sender: 'You', message: userInput }\r\n//         ];\r\n//         setChatLog(updatedChatLog);\r\n//         // Clear input field after submitting the question\r\n//         setUserInput('');\r\n\r\n//         try {\r\n//             // Send user question to server using Axios\r\n//             const response = await axios.post('http://localhost:5000/chat', { prompt: userInput });\r\n//             const data = response.data;\r\n\r\n//             // Add bot response to chat log\r\n//             const updatedChatLogWithResponse = [\r\n//                 ...updatedChatLog,\r\n//                 { sender: 'Chatbot', message: data.response }\r\n//             ];\r\n//             setChatLog(updatedChatLogWithResponse);\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n\r\nexport const Home = ({ chatLog, setChatLog }) => {\r\n    const handleSubmit = (e) => {\r\n        const [userInput, setUserInput] = useState('');\r\n    const [chatLog, setChatLog] = useState([]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userInput.trim() === '') return;\r\n\r\n        // Add user question to chat log\r\n        const updatedChatLog = [\r\n            ...chatLog,\r\n            { sender: 'You', message: userInput }\r\n        ];\r\n        setChatLog(updatedChatLog);\r\n        // Clear input field after submitting the question\r\n        setUserInput('');\r\n\r\n        try {\r\n            // Send user question to server using Axios\r\n            const response = await axios.post('http://localhost:5000/chat', { prompt: userInput });\r\n            const data = response.data;\r\n\r\n            // Add bot response to chat log\r\n            const updatedChatLogWithResponse = [\r\n                ...updatedChatLog,\r\n                { sender: 'Chatbot', message: data.response }\r\n            ];\r\n            setChatLog(updatedChatLogWithResponse);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n    \r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container main-content\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <h3>Ask anything related to Placement</h3>\r\n                    <div className=\"chat-log\">\r\n                        {chatLog.map((entry, index) => (\r\n                            <div key={index} className={`message ${entry.sender.toLowerCase()}`}>\r\n                                <strong>{entry.sender}:</strong> {entry.message}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={userInput}\r\n                            onChange={(e) => setUserInput(e.target.value)}\r\n                            placeholder=\"Type your question here...\"\r\n                        />\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <Link to=\"/new-chat\">New Chat</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}